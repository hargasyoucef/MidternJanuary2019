Please answer the below core-java Questions:

What is programing language?
A. Computer programming languages allow us to give instructions to a computer in a language the computer understands.
Just as many human-based languages exist, there are an array of computer programming languages that programmers can use
to communicate with a computer. The term programming language usually refers to high-level languages, such as BASIC, C,
C++, COBOL, Java, FORTRAN, Ada, and Pascal.

What jdk contains or composed of and define each components?
A. The Java Development Kit (JDK) provides the foundation upon which all applications that are targeted toward the Java
platform are built. The JDK includes a variety of tools and utilities that perform a variety of tasks, which include:
Compiler: which compiles source code and converts it into bytecode,
Java virtual machines (JVMs): which uses a just-in-time (JIT) compiler to convert bytecode into machine code, and executes
the   program using the Java Runtime Environment (JRE)

What is IDE?
A. An integrated development environment (IDE) is a software application that provides comprehensive facilities to computer
programmers for software development. An IDE normally consists of a source code editor, build automation tools, and a debugger.

What are the IDEs available in the market to support java?
Here are  IDEs available in the market to support java :
Eclipse,  IntelliJ IDEA , Netbeans,DrJava ...

Explain the entire java life cycle.
- First,   typing the program in a text-editor. After completing editing of the program, saving the file as ".java extension".
- Second step is compiling the code using Java compiler (javac). The input to the compiler is Java source code which is available
in Sample.java. The output of the compiler is machine independent or platform independent code which is known as bytecode.
The file which is generated after compilation is .class file.
- Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.

what is class?
a class provides the blueprints for objects.

What is object?
An object is an instance of a class.

What is the entry point of an application?
It is the main method.

Why main is static?
This is neccesary because main() is called by the JVM before any objects are made. Since it is static it can be directly
invoked via the class. Similarly, we use static sometime for user defined methods so that we need not to make objects.
void indicates that the main() method being declared does not return a value.

Which class is the superclass of all classes?
This is java.lang.Object.

What is difference between path and classpath variables?
- CLASSPATH is the path for Java application where the classes you compiled will be available. The main difference between
PATH and CLASSPATH is that PATH is an environment variable which is used to locate JDK binaries like "java" or "javac"
command used to run java program and compile java source file.

What is the difference between an Interface and Abstract class?
- Main difference is methods of a Java interface are implicitly abstract and cannot have implementations. A Java abstract
class can have instance methods that implements a default behavior.
-Variables declared in a Java interface is by default final. An abstract class may contain non-final variables.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
- No, we can't.
There are two ways you can achieve this.
1) Either you extend / implement the Abstract class / interface in a new class,create the object of this new class and
then use this object as per your need.
2) The Compiler allows you to create anonymous objects of the interfaces in your code.

what is Access Specifier?
 Java Access Specifiers (also known as Visibility Specifiers ) regulate access to classes, fields and methods in Java.
 These Specifiers determine whether a field or method in a class, can be used or invoked by another method in another
 class or sub-class. Access Specifiers can be used to restrict access. The four access levels are:
    the default: Visible to the package. No modifiers are needed.
    private Visible to the class only.
    public: Visible to the world.
    protected: Visible to the package and all subclasses.

What is OOP ? Define each feature of java OOP.
OOPS Concepts or Object Oriented Programming Concepts are very important. Without having an idea about OOPS concepts,
you will not be able to design systems in the object-oriented programming model.
- Abstraction
 Abstraction is the concept of hiding the internal details and describing things in simple terms.
- Encapsulation
 Encapsulation is the technique used to implement abstraction in object-oriented programming. Encapsulation is used for
 access restriction to class members and methods.
- Polymorphism
 Polymorphism is the concept where an object behaves differently in different situations. There are two types of
 polymorphism – compile time polymorphism (achieved by method overloading) and runtime polymorphism(achieved by method overriding).
- Inheritance is the object oriented programming concept where an object is based on another object. Inheritance is the
 mechanism of code reuse. The object that is getting inherited is called superclass and the object that inherits the
 superclass is called subclass. We use extends keyword in java to implement inheritance.

What is Java Package and which package is imported by default?
Package in Java is a mechanism to encapsulate a group of classes, sub packages and interfaces. Packages are used for:
Preventing naming conflicts. Making searching/locating and usage of classes, interfaces, enumerations and annotations easier
Providing controlled access. Packages can be considered as data encapsulation (or data-hiding).
-  java.lang package is imported by default

What is API? Name list of API that you have used so far.
Java application programming interface (API) is a list of all classes that are part of the Java development kit (JDK).
It includes all Java packages, classes, and interfaces, along  with their methods, fields, and constructors. These
prewritten classes provide a tremendous amount of functionality to a programmer.
I have used so far: Class, String, ListArray, Scanner, LinkedList, LinkedHashMap, HashMap ....

Does java support multiple inheritance, explain why or why not?
No java doesn't support multiple inheritance directly because it leads to overiding of methods when both extended class
have a same method name.

What is method overloading and when it happens?
Method Overloading is a feature that allows a class to have more than one method having the same name, if their argument
lists are different. It is similar to constructor overloading in Java, that allows a class to have more than one constructor
having different argument lists. And it happens in compile time.

Explain exceptions in java and how to handle it.
Java - Exceptions. An exception (or exceptional event) is a problem that arises during the execution of a program.
When an Exception occurs, within the try block,  the normal flow of the program is disrupted and the program/Application terminates abnormally,
which is not recommended, therefore, these exceptions are to be handled.Your code can catch this exception (using catch block) and
handle it in some rational manner. System-generated exceptions are automatically thrown by the Java run-time system.
To manually throw an exception, use the keyword throw.

What is static keyword in java? How it has been used in variables and methods ?
If you apply static keyword with any method, it is known as static method. A static method belongs to the class rather
than the object of a class. A static method can be invoked without the need for creating an instance of a class.
A static method can access static data member and can change the value of it.
Static variable in Java: Only a single copy of static variable is created and shared among all the instances of the class,
they are class level variables.

What is final and how it has been used variables and methods?
final keyword is used in different contexts. First of all, final is a non-access modifier applicable
only to a variable, a method or a class. When a variable is declared with final keyword, its value can't be modified, essentially, a constant.
A final  method declaration is to to indicate that the method cannot be overridden by subclasses.

What is final, finally and finalize?'
- Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
- Finally is used to place important code, it will be executed whether exception is handled or not.
- Finalize is used to perform clean up processing just before object is garbage collected.

What is a constructor ?
A constructor in Java is a block of code similar to a method that's called when an instance of an object is created.
A constructor doesn't have a return type, it takes the same name as class.

Can we have multiple constructors in a class?
Yes, we can.

If we don't have a constructor declared, what is called during the object creation?
It's called Default Constructor.

What is "this" keyword in java ?
Keyword THIS is a reference variable in Java that refers to the current object. The various usages of 'THIS' keyword in
Java are as follows: It can be used to refer instance variable of current class. It can be used to invoke or initiate
current class constructor.

What is "super" keyword in java? How many possible way can you use?
super is a keyword. It is used inside a sub-class method definition to call a method defined in the super class.
Private methods of the super-class cannot be called. Only public and protected methods can be called by the super keyword.
It is also used by class constructors to invoke constructors of its parent class.

What is JVM stand for ?
Java Virtual Machine.

Is JVM platform independent?
No, it is not Independent.

What version of java are you using?
java version "11.0.1" 2018-10-16 LTS

What is JAR stand for ?
JAR stands for "Java ARchive"

What is the difference between JDK and JVM?
JDK is Java Development Kit and JVM is Java Virtual Machine. JDK contains JVM and whole other tools for java development
inside it. JVM converts bytecode to machine code and execute it on machine. JVM is the heart of java programming language
and provides platform independence.  There is no matching functionality between JDK and JVM.

What is the difference between JVM and JRE?
JRE is the environment within which the virtual machine runs , and it is the implementation of JVM, it provides platform to
execute java programs. JRE consists of JVM and java binaries and other classes to execute any program successfully.
JRE doesn’t contain any development tools like java compiler, debugger etc. If you want to execute any java program, you
should have JRE installed but we don’t need JDK for running any java program.
JDK is for development purpose whereas JRE is for running the java programs.
JDK and JRE both contains JVM so that we can run our java program.

What is compile time and run time?
Answer: Runtime and compile time are programming terms that refer to different stages of software program development. ...
This compilation process is referred to as compile time. A compiled program can be opened and run by a user. When an
application is running, it is called runtime

What is heap?
A heap is a part of RAM, which is an area of memory used for dynamic memory allocation. Blocks of memory are allocated
and freed in this case in an arbitrary order.

How java manage it's memory?
What is the difference between String, StringBuffer and StringBuilder?
What is Singleton class?



What is Serialization and Deserialization?
when to use transient variable in java?
Difference between while and do..while loop?
What is Enum?
What is Iterator?
Which one will take more memory, an int or Integer?
Why is String Immutable in Java?
What is constructor chaining in Java?
The difference between Serial and Parallel Garbage Collector?
What is JIT stands for?
Explain Java Heap space and Garbage collection?
Can you guarantee the garbage collection process?
What is the difference between stack and heap in Java?
What is reflection in java and why is it useful?
what is multithreading in java?
What is the use of synchronization in Java?
What is Framework?
What are the testing Framework available in java?
Difference between jUnit and testNG?
What are the dependencies for this project?
what is dependency injection in java?
What is static binding and dynamic binding?









