Please answer the below core-java Questions:

What is programing language?
A. Computer programming languages allow us to give instructions to a computer in a language the computer understands.
Just as many human-based languages exist, there are an array of computer programming languages that programmers can use
to communicate with a computer. The term programming language usually refers to high-level languages, such as BASIC, C,
C++, COBOL, Java, FORTRAN, Ada, and Pascal.

What jdk contains or composed of and define each components?
A. The Java Development Kit (JDK) provides the foundation upon which all applications that are targeted toward the Java
platform are built. The JDK includes a variety of tools and utilities that perform a variety of tasks, which include:
Compiler: which compiles source code and converts it into bytecode,
Java virtual machines (JVMs): which uses a just-in-time (JIT) compiler to convert bytecode into machine code, and executes
the   program using the Java Runtime Environment (JRE)

What is IDE?
A. An integrated development environment (IDE) is a software application that provides comprehensive facilities to computer
programmers for software development. An IDE normally consists of a source code editor, build automation tools, and a debugger.

What are the IDEs available in the market to support java?
Here are  IDEs available in the market to support java :
Eclipse,  IntelliJ IDEA , Netbeans,DrJava ...

Explain the entire java life cycle.
- First,   typing the program in a text-editor. After completing editing of the program, saving the file as ".java extension".
- Second step is compiling the code using Java compiler (javac). The input to the compiler is Java source code which is available
in Sample.java. The output of the compiler is machine independent or platform independent code which is known as bytecode.
The file which is generated after compilation is .class file.
- Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.

what is class?
a class provides the blueprints for objects.

What is object?
An object is an instance of a class.

What is the entry point of an application?
It is the main method.

Why main is static?
This is neccesary because main() is called by the JVM before any objects are made. Since it is static it can be directly
invoked via the class. Similarly, we use static sometime for user defined methods so that we need not to make objects.
void indicates that the main() method being declared does not return a value.

Which class is the superclass of all classes?
This is java.lang.Object.

What is difference between path and classpath variables?
- CLASSPATH is the path for Java application where the classes you compiled will be available. The main difference between
PATH and CLASSPATH is that PATH is an environment variable which is used to locate JDK binaries like "java" or "javac"
command used to run java program and compile java source file.

What is the difference between an Interface and Abstract class?
- Main difference is methods of a Java interface are implicitly abstract and cannot have implementations. A Java abstract
class can have instance methods that implements a default behavior.
-Variables declared in a Java interface is by default final. An abstract class may contain non-final variables.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
- No, we can't.
There are two ways you can achieve this.
1) Either you extend / implement the Abstract class / interface in a new class,create the object of this new class and
then use this object as per your need.
2) The Compiler allows you to create anonymous objects of the interfaces in your code.

what is Access Specifier?
 Java Access Specifiers (also known as Visibility Specifiers ) regulate access to classes, fields and methods in Java.
 These Specifiers determine whether a field or method in a class, can be used or invoked by another method in another
 class or sub-class. Access Specifiers can be used to restrict access. The four access levels are:
    the default: Visible to the package. No modifiers are needed.
    private Visible to the class only.
    public: Visible to the world.
    protected: Visible to the package and all subclasses.

What is OOP ? Define each feature of java OOP.
OOPS Concepts or Object Oriented Programming Concepts are very important. Without having an idea about OOPS concepts,
you will not be able to design systems in the object-oriented programming model.
- Abstraction
 Abstraction is the concept of hiding the internal details and describing things in simple terms.
- Encapsulation
 Encapsulation is the technique used to implement abstraction in object-oriented programming. Encapsulation is used for
 access restriction to class members and methods.
- Polymorphism
 Polymorphism is the concept where an object behaves differently in different situations. There are two types of
 polymorphism – compile time polymorphism (achieved by method overloading) and runtime polymorphism(achieved by method overriding).
- Inheritance is the object oriented programming concept where an object is based on another object. Inheritance is the
 mechanism of code reuse. The object that is getting inherited is called superclass and the object that inherits the
 superclass is called subclass. We use extends keyword in java to implement inheritance.

What is Java Package and which package is imported by default?
Package in Java is a mechanism to encapsulate a group of classes, sub packages and interfaces. Packages are used for:
Preventing naming conflicts. Making searching/locating and usage of classes, interfaces, enumerations and annotations easier
Providing controlled access. Packages can be considered as data encapsulation (or data-hiding).
-  java.lang package is imported by default


What is API? Name list of API that you have used so far.
Does java support multiple inheritance, explain why or why not?
What is method overloading and when it happens?
Explain exceptions in java and how to handle it.
What is static keyword in java? How it has been used in variables and methods ?
What is final and how it has been used variables and methods?
What is final, finally and finalize?
What is a constructor ?
Can we have multiple constructors in a class?
If we don't have a constructor declared, what is called during the object creation?
What is "this" keyword in java ?
What is "super" keyword in java? How many possible way can you use?
What is JVM stand for ?
Is JVM platform independent?
What version of java are you using?
What is JAR stand for ?
What is the difference between JDK and JVM?
What is the difference between JVM and JRE?
What is compile time and run time?
What is heap?
How java manage it's memory?
What is the difference between String, StringBuffer and StringBuilder?
What is Singleton class?
What is Serialization and Deserialization?
when to use transient variable in java?
Difference between while and do..while loop?
What is Enum?
What is Iterator?
Which one will take more memory, an int or Integer?
Why is String Immutable in Java?
What is constructor chaining in Java?
The difference between Serial and Parallel Garbage Collector?
What is JIT stands for?
Explain Java Heap space and Garbage collection?
Can you guarantee the garbage collection process?
What is the difference between stack and heap in Java?
What is reflection in java and why is it useful?
what is multithreading in java?
What is the use of synchronization in Java?
What is Framework?
What are the testing Framework available in java?
Difference between jUnit and testNG?
What are the dependencies for this project?
what is dependency injection in java?
What is static binding and dynamic binding?









